<?php
/**
 * EmManSys User Profile Handler
 *
 * @package EmManSys
 * @since 1.2.0
 */

// If this file is called directly, abort.
if ( ! defined( 'WPINC' ) ) {
    die;
}

class EMS_User_Profile {

    /**
     * Constructor.
     */
    public function __construct() {
        // Actions and filters specific to User Profile can be initialized here if needed
    }

    /**
     * Display leave management section on user profile or dedicated dashboard page.
     * @param WP_User $user_object_from_hook The user object from the hook or current user for dashboard.
     * @param bool    $is_dashboard_context Whether this is being rendered in the dashboard context.
     */
    public function show_leave_management_on_profile( $user_object_from_hook, $is_dashboard_context = false ) {
        // This method is identical to the one in version 1.1.20, just moved here.
        // It uses EMS_Leave_Options statically.
        $user_to_display = null; if ( $is_dashboard_context ) { $user_to_display = wp_get_current_user(); if ( ! ($user_to_display instanceof WP_User) || ! $user_to_display->ID ) { echo '<p>' . esc_html__('Error: Could not retrieve current user information for the dashboard.', 'emmansys') . '</p>'; return; } if ( !current_user_can('submit_profile_leave_request') ) { echo '<div class="notice notice-error"><p>' . esc_html__('You do not have permission to view this dashboard content.', 'emmansys') . '</p></div>'; return; } } else { $user_to_display = $user_object_from_hook; if ( ! ($user_to_display instanceof WP_User) || ! $user_to_display->ID ) { return; } } $current_user_acting_id = get_current_user_id(); $target_profile_user_id = $user_to_display->ID; $linked_employee_cpt_id = null; $employee_query_args = array( 'post_type' => 'employee', 'posts_per_page' => 1, 'meta_query' => array( array('key' => '_employee_user_id', 'value' => $target_profile_user_id, 'compare' => '=')), 'fields' => 'ids'); $linked_employee_posts = get_posts($employee_query_args); if (!empty($linked_employee_posts) && isset($linked_employee_posts[0])) { $linked_employee_cpt_id = $linked_employee_posts[0]; } $today = current_time('Y-m-d'); $all_leave_types = EMS_Leave_Options::get_leave_types(); $statuses = EMS_Leave_Options::get_leave_statuses(); $durations = EMS_Leave_Options::get_leave_durations(); $min_date_attr_profile = 'min="' . esc_attr($today) . '"'; if (!$is_dashboard_context) { echo '<hr>'; echo '<h2>' . esc_html__( 'Leave Management', 'emmansys' ) . '</h2>'; } if ($linked_employee_cpt_id && ($current_user_acting_id === $target_profile_user_id || current_user_can('edit_users'))) { echo '<h3>' . esc_html__('Your Leave Balances', 'emmansys') . '</h3>'; echo '<table class="form-table"><tbody>'; if (!empty($all_leave_types)) { foreach ($all_leave_types as $type_key => $type_data) { if (is_array($type_data) && isset($type_data['label'])) { $employee_specific_balance_raw = get_post_meta($linked_employee_cpt_id, '_leave_balance_' . $type_key, true); $balance_notice = ''; $display_balance_val = 0; if ($employee_specific_balance_raw !== '') { $display_balance_val = (float) $employee_specific_balance_raw; } else { $display_balance_val = isset($type_data['initial_balance']) ? (float) $type_data['initial_balance'] : 0; $balance_notice = ' <small><em>(' . __('default', 'emmansys') . ')</em></small>'; } echo '<tr>'; echo '<th>' . esc_html($type_data['label']) . '</th>'; echo '<td>' . number_format_i18n($display_balance_val, ($display_balance_val == (int)$display_balance_val) ? 0 : 1) . ' ' . __('days/units', 'emmansys') . $balance_notice . '</td>'; echo '</tr>'; } } } else { echo '<tr><td colspan="2">' . esc_html__('No leave types defined.', 'emmansys') . '</td></tr>'; } echo '</tbody></table><hr style="margin: 20px 0;">'; } if ( $current_user_acting_id === $target_profile_user_id && $linked_employee_cpt_id && current_user_can('submit_profile_leave_request') ) : $form_id = $is_dashboard_context ? 'ems-dashboard-leave-form' : 'ems-profile-leave-form'; ?> <h3><?php esc_html_e( 'File a New Leave Request', 'emmansys' ); ?></h3> <div id="<?php echo esc_attr($form_id); ?>-messages"></div> <form method="post" action="<?php echo esc_url( admin_url('admin-post.php') ); ?>" id="<?php echo esc_attr($form_id); ?>"> <input type="hidden" name="action" value="ems_submit_leave_request"> <input type="hidden" name="ems_user_id" value="<?php echo esc_attr( $target_profile_user_id ); ?>"> <input type="hidden" name="ems_employee_cpt_id_profile" value="<?php echo esc_attr( $linked_employee_cpt_id ); ?>"> <?php wp_nonce_field( 'ems_submit_leave_request_nonce', 'ems_leave_request_profile_nonce' ); ?> <table class="form-table"><tbody> <tr><th><label for="<?php echo esc_attr($form_id); ?>-leave-type"><?php _e( 'Leave Type', 'emmansys' ); ?></label></th><td><select id="<?php echo esc_attr($form_id); ?>-leave-type" name="ems_profile_leave_type" required><option value=""><?php _e( '-- Select Type --', 'emmansys' ); ?></option><?php foreach ( $all_leave_types as $key => $type_data ) : ?><option value="<?php echo esc_attr( $key ); ?>"><?php echo esc_html( $type_data['label'] ); ?></option><?php endforeach; ?></select></td></tr> <tr><th><label for="<?php echo esc_attr($form_id); ?>-start-date"><?php _e( 'Start Date', 'emmansys' ); ?></label></th><td><input type="date" id="<?php echo esc_attr($form_id); ?>-start-date" name="ems_profile_start_date" class="regular-text ems-leave-start-date" <?php echo $min_date_attr_profile; ?> required /></td></tr> <tr><th><label for="<?php echo esc_attr($form_id); ?>-end-date"><?php _e( 'End Date', 'emmansys' ); ?></label></th><td><input type="date" id="<?php echo esc_attr($form_id); ?>-end-date" name="ems_profile_end_date" class="regular-text ems-leave-end-date" <?php echo $min_date_attr_profile; ?> required /></td></tr> <tr><th><label for="<?php echo esc_attr($form_id); ?>-leave-duration"><?php _e( 'Leave Duration', 'emmansys' ); ?></label></th><td><select id="<?php echo esc_attr($form_id); ?>-leave-duration" name="ems_profile_leave_duration" required><?php foreach ( $durations as $key => $label ) : ?><option value="<?php echo esc_attr( $key ); ?>"><?php echo esc_html( $label ); ?></option><?php endforeach; ?></select></td></tr> <tr><th><label for="<?php echo esc_attr($form_id); ?>-leave-reason"><?php _e( 'Reason for Leave', 'emmansys' ); ?></label></th><td><textarea id="<?php echo esc_attr($form_id); ?>-leave-reason" name="ems_profile_leave_reason_field" rows="5" class="large-text" required></textarea></td></tr> </tbody></table> <?php submit_button( __( 'Submit Leave Request', 'emmansys' ) ); ?> </form><hr style="margin: 20px 0;"> <?php elseif ($current_user_acting_id === $target_profile_user_id && !$linked_employee_cpt_id && current_user_can('submit_profile_leave_request')): ?> <p><?php _e( 'To file leave requests, your WordPress user account must first be linked to an Employee record by an administrator.', 'emmansys' ); ?></p><hr style="margin: 20px 0;"> <?php endif; ?> <?php $can_view_history = false; if ($is_dashboard_context && current_user_can('view_own_profile_leave_history')) { $can_view_history = true; } elseif (!$is_dashboard_context && $current_user_acting_id === $target_profile_user_id && current_user_can('view_own_profile_leave_history')) { $can_view_history = true; } elseif (!$is_dashboard_context && current_user_can('edit_users') && $current_user_acting_id !== $target_profile_user_id) { $can_view_history = true; } if ( $can_view_history ) : ?> <h3><?php esc_html_e( 'Leave Request History', 'emmansys' ); ?></h3> <?php $history_args = array( 'post_type' => 'leave_request', 'posts_per_page' => -1, 'meta_query' => array(), 'orderby' => 'date', 'order' => 'DESC', ); if ($linked_employee_cpt_id) { $history_args['meta_query']['relation'] = 'OR'; $history_args['meta_query'][] = array( 'key' => '_leave_employee_cpt_id', 'value' => $linked_employee_cpt_id, 'compare' => '=', 'type' => 'NUMERIC'); } $history_args['meta_query'][] = array( 'key' => '_leave_user_id', 'value' => $target_profile_user_id, 'compare' => '=', 'type' => 'NUMERIC'); if (count($history_args['meta_query']) === 1 && isset($history_args['meta_query']['relation'])) { unset($history_args['meta_query']['relation']); } elseif (empty($history_args['meta_query'])) { $history_args['author'] = $target_profile_user_id; } $user_leave_requests = new WP_Query( $history_args ); if ( $user_leave_requests->have_posts() ) : ?> <table class="wp-list-table widefat fixed striped"><thead><tr> <th><?php _e( 'Request Date', 'emmansys' ); ?></th><th><?php _e( 'Leave Type', 'emmansys' ); ?></th> <th><?php _e( 'Dates', 'emmansys' ); ?></th><th><?php _e( 'Duration', 'emmansys' ); ?></th> <th><?php _e( 'Status', 'emmansys' ); ?></th><th><?php _e( 'Reason', 'emmansys' ); ?></th> </tr></thead><tbody> <?php $leave_types_map_history = EMS_Leave_Options::get_leave_types(); $statuses_map_history = EMS_Leave_Options::get_leave_statuses(); $durations_map_history = EMS_Leave_Options::get_leave_durations(); while ( $user_leave_requests->have_posts() ) : $user_leave_requests->the_post(); $request_id = get_the_ID(); $type_key_history = get_post_meta( $request_id, '_leave_type', true ); ?> <tr> <td><?php echo get_the_date( '', $request_id ); ?></td> <td><?php echo esc_html( $leave_types_map_history[$type_key_history]['label'] ?? $type_key_history ?: __('N/A', 'emmansys') ); ?></td> <td><?php echo esc_html( get_post_meta( $request_id, '_leave_start_date', true ) ); ?> - <?php echo esc_html( get_post_meta( $request_id, '_leave_end_date', true ) ); ?></td> <td><?php echo esc_html( $durations_map_history[get_post_meta( $request_id, '_leave_duration', true )] ?? get_post_meta( $request_id, '_leave_duration', true ) ?: __('N/A', 'emmansys') ); ?></td> <td><strong><?php echo esc_html( $statuses_map_history[get_post_meta( $request_id, '_leave_status', true )] ?? get_post_meta( $request_id, '_leave_status', true ) ?: __('N/A', 'emmansys') ); ?></strong></td> <td><?php echo wp_kses_post( get_post_meta( $request_id, '_leave_reason', true ) ); ?></td> </tr> <?php endwhile; ?> </tbody></table> <?php else : ?> <p><?php _e( 'No leave requests found for this user.', 'emmansys' ); ?></p> <?php endif; wp_reset_postdata(); ?> <?php endif; ?> <?php if (!$is_dashboard_context) echo '<hr style="margin-top:20px;">'; ?> <?php
    }
}
